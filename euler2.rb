# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
def fibonacci_numbers
  fibonacci_snapshot = [1,2]
  fibonacci_results = []
  loop do
    return fibonacci_results if fibonacci_snapshot[1] > 4_000_000
    fibonacci_snapshot << fibonacci_snapshot.reduce(:+)
    fibonacci_results << fibonacci_snapshot[0]
    fibonacci_snapshot.shift
  end
end

def find_evens(numbers)
  numbers.select { |num| num.even? }
end

evens = find_evens(fibonacci_numbers)
puts evens.reduce(:+)
